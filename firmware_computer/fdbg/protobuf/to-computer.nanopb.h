/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_FDBG_PROTOBUF_TO_COMPUTER_NANOPB_H_INCLUDED
#define PB_FDBG_PROTOBUF_TO_COMPUTER_NANOPB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _fdbg_Breakpoint_Action {
    fdbg_Breakpoint_Action_ADD = 0,
    fdbg_Breakpoint_Action_REMOVE = 1,
    fdbg_Breakpoint_Action_CLEAR_ALL = 2
} fdbg_Breakpoint_Action;

/* Struct definitions */
typedef struct _fdbg_Ack {
    char dummy_field;
} fdbg_Ack;

typedef PB_BYTES_ARRAY_T(64) fdbg_WriteMemory_bytes_t;
typedef struct _fdbg_WriteMemory {
    uint32_t memory_nr;
    uint64_t initial_addr;
    fdbg_WriteMemory_bytes_t bytes;
    bool validate;
} fdbg_WriteMemory;

typedef struct _fdbg_ReadMemory {
    uint32_t memory_nr;
    uint64_t initial_addr;
    uint32_t sz;
    uint32_t sequences;
} fdbg_ReadMemory;

typedef struct _fdbg_Reset {
    char dummy_field;
} fdbg_Reset;

typedef struct _fdbg_Cycle {
    char dummy_field;
} fdbg_Cycle;

typedef struct _fdbg_Breakpoint {
    uint64_t address;
    fdbg_Breakpoint_Action action;
} fdbg_Breakpoint;

typedef struct _fdbg_UserEvent_TerminalKeypress {
    char text[8];
} fdbg_UserEvent_TerminalKeypress;

typedef struct _fdbg_UserEvent {
    pb_size_t which_type;
    union {
        fdbg_UserEvent_TerminalKeypress terminal_keypress;
    } type;
} fdbg_UserEvent;

typedef struct _fdbg_Step {
    bool full;
    pb_size_t user_events_count;
    fdbg_UserEvent user_events[4];
} fdbg_Step;

typedef struct _fdbg_Run {
    bool forever;
} fdbg_Run;

typedef struct _fdbg_Next {
    char dummy_field;
} fdbg_Next;

typedef struct _fdbg_GetRunStatus {
    pb_size_t user_events_count;
    fdbg_UserEvent user_events[4];
} fdbg_GetRunStatus;

typedef struct _fdbg_Pause {
    char dummy_field;
} fdbg_Pause;

typedef struct _fdbg_ToComputer {
    pb_size_t which_message;
    union {
        fdbg_Ack ack; /* response: AckResponse */
        fdbg_Reset reset; /* response: ComputerStatus */
        fdbg_WriteMemory write_memory; /* response: WriteMemoryResponse */
        fdbg_ReadMemory read_memory; /* response: ReadMemoryResponse */
        fdbg_Cycle cycle; /* response: CycleResult */
        fdbg_Step step; /* response: ComputerStatus */
        fdbg_Breakpoint breakpoint; /* response: breakpoint list */
        fdbg_Run run; /* response: status ok */
        fdbg_Next next; /* response: status ok */
        fdbg_GetRunStatus get_run_status; /* response: RunStatus */
        fdbg_Pause pause; /* response: ComputerStatus */
    } message;
} fdbg_ToComputer;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _fdbg_Breakpoint_Action_MIN fdbg_Breakpoint_Action_ADD
#define _fdbg_Breakpoint_Action_MAX fdbg_Breakpoint_Action_CLEAR_ALL
#define _fdbg_Breakpoint_Action_ARRAYSIZE ((fdbg_Breakpoint_Action)(fdbg_Breakpoint_Action_CLEAR_ALL+1))







#define fdbg_Breakpoint_action_ENUMTYPE fdbg_Breakpoint_Action









/* Initializer values for message structs */
#define fdbg_Ack_init_default                    {0}
#define fdbg_WriteMemory_init_default            {0, 0, {0, {0}}, 0}
#define fdbg_ReadMemory_init_default             {0, 0, 0, 0}
#define fdbg_Reset_init_default                  {0}
#define fdbg_Step_init_default                   {0, 0, {fdbg_UserEvent_init_default, fdbg_UserEvent_init_default, fdbg_UserEvent_init_default, fdbg_UserEvent_init_default}}
#define fdbg_Cycle_init_default                  {0}
#define fdbg_Breakpoint_init_default             {0, _fdbg_Breakpoint_Action_MIN}
#define fdbg_UserEvent_init_default              {0, {fdbg_UserEvent_TerminalKeypress_init_default}}
#define fdbg_UserEvent_TerminalKeypress_init_default {""}
#define fdbg_Run_init_default                    {0}
#define fdbg_Next_init_default                   {0}
#define fdbg_GetRunStatus_init_default           {0, {fdbg_UserEvent_init_default, fdbg_UserEvent_init_default, fdbg_UserEvent_init_default, fdbg_UserEvent_init_default}}
#define fdbg_Pause_init_default                  {0}
#define fdbg_ToComputer_init_default             {0, {fdbg_Ack_init_default}}
#define fdbg_Ack_init_zero                       {0}
#define fdbg_WriteMemory_init_zero               {0, 0, {0, {0}}, 0}
#define fdbg_ReadMemory_init_zero                {0, 0, 0, 0}
#define fdbg_Reset_init_zero                     {0}
#define fdbg_Step_init_zero                      {0, 0, {fdbg_UserEvent_init_zero, fdbg_UserEvent_init_zero, fdbg_UserEvent_init_zero, fdbg_UserEvent_init_zero}}
#define fdbg_Cycle_init_zero                     {0}
#define fdbg_Breakpoint_init_zero                {0, _fdbg_Breakpoint_Action_MIN}
#define fdbg_UserEvent_init_zero                 {0, {fdbg_UserEvent_TerminalKeypress_init_zero}}
#define fdbg_UserEvent_TerminalKeypress_init_zero {""}
#define fdbg_Run_init_zero                       {0}
#define fdbg_Next_init_zero                      {0}
#define fdbg_GetRunStatus_init_zero              {0, {fdbg_UserEvent_init_zero, fdbg_UserEvent_init_zero, fdbg_UserEvent_init_zero, fdbg_UserEvent_init_zero}}
#define fdbg_Pause_init_zero                     {0}
#define fdbg_ToComputer_init_zero                {0, {fdbg_Ack_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define fdbg_WriteMemory_memory_nr_tag           1
#define fdbg_WriteMemory_initial_addr_tag        2
#define fdbg_WriteMemory_bytes_tag               3
#define fdbg_WriteMemory_validate_tag            4
#define fdbg_ReadMemory_memory_nr_tag            1
#define fdbg_ReadMemory_initial_addr_tag         2
#define fdbg_ReadMemory_sz_tag                   3
#define fdbg_ReadMemory_sequences_tag            4
#define fdbg_Breakpoint_address_tag              1
#define fdbg_Breakpoint_action_tag               2
#define fdbg_UserEvent_TerminalKeypress_text_tag 1
#define fdbg_UserEvent_terminal_keypress_tag     1
#define fdbg_Step_full_tag                       1
#define fdbg_Step_user_events_tag                2
#define fdbg_Run_forever_tag                     1
#define fdbg_GetRunStatus_user_events_tag        1
#define fdbg_ToComputer_ack_tag                  1
#define fdbg_ToComputer_reset_tag                2
#define fdbg_ToComputer_write_memory_tag         3
#define fdbg_ToComputer_read_memory_tag          4
#define fdbg_ToComputer_cycle_tag                5
#define fdbg_ToComputer_step_tag                 6
#define fdbg_ToComputer_breakpoint_tag           7
#define fdbg_ToComputer_run_tag                  8
#define fdbg_ToComputer_next_tag                 9
#define fdbg_ToComputer_get_run_status_tag       10
#define fdbg_ToComputer_pause_tag                11

/* Struct field encoding specification for nanopb */
#define fdbg_Ack_FIELDLIST(X, a) \

#define fdbg_Ack_CALLBACK NULL
#define fdbg_Ack_DEFAULT NULL

#define fdbg_WriteMemory_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   memory_nr,         1) \
X(a, STATIC,   SINGULAR, UINT64,   initial_addr,      2) \
X(a, STATIC,   SINGULAR, BYTES,    bytes,             3) \
X(a, STATIC,   SINGULAR, BOOL,     validate,          4)
#define fdbg_WriteMemory_CALLBACK NULL
#define fdbg_WriteMemory_DEFAULT NULL

#define fdbg_ReadMemory_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   memory_nr,         1) \
X(a, STATIC,   SINGULAR, UINT64,   initial_addr,      2) \
X(a, STATIC,   SINGULAR, UINT32,   sz,                3) \
X(a, STATIC,   SINGULAR, UINT32,   sequences,         4)
#define fdbg_ReadMemory_CALLBACK NULL
#define fdbg_ReadMemory_DEFAULT NULL

#define fdbg_Reset_FIELDLIST(X, a) \

#define fdbg_Reset_CALLBACK NULL
#define fdbg_Reset_DEFAULT NULL

#define fdbg_Step_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     full,              1) \
X(a, STATIC,   REPEATED, MESSAGE,  user_events,       2)
#define fdbg_Step_CALLBACK NULL
#define fdbg_Step_DEFAULT NULL
#define fdbg_Step_user_events_MSGTYPE fdbg_UserEvent

#define fdbg_Cycle_FIELDLIST(X, a) \

#define fdbg_Cycle_CALLBACK NULL
#define fdbg_Cycle_DEFAULT NULL

#define fdbg_Breakpoint_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   address,           1) \
X(a, STATIC,   SINGULAR, UENUM,    action,            2)
#define fdbg_Breakpoint_CALLBACK NULL
#define fdbg_Breakpoint_DEFAULT NULL

#define fdbg_UserEvent_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,terminal_keypress,type.terminal_keypress),   1)
#define fdbg_UserEvent_CALLBACK NULL
#define fdbg_UserEvent_DEFAULT NULL
#define fdbg_UserEvent_type_terminal_keypress_MSGTYPE fdbg_UserEvent_TerminalKeypress

#define fdbg_UserEvent_TerminalKeypress_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   text,              1)
#define fdbg_UserEvent_TerminalKeypress_CALLBACK NULL
#define fdbg_UserEvent_TerminalKeypress_DEFAULT NULL

#define fdbg_Run_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     forever,           1)
#define fdbg_Run_CALLBACK NULL
#define fdbg_Run_DEFAULT NULL

#define fdbg_Next_FIELDLIST(X, a) \

#define fdbg_Next_CALLBACK NULL
#define fdbg_Next_DEFAULT NULL

#define fdbg_GetRunStatus_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  user_events,       1)
#define fdbg_GetRunStatus_CALLBACK NULL
#define fdbg_GetRunStatus_DEFAULT NULL
#define fdbg_GetRunStatus_user_events_MSGTYPE fdbg_UserEvent

#define fdbg_Pause_FIELDLIST(X, a) \

#define fdbg_Pause_CALLBACK NULL
#define fdbg_Pause_DEFAULT NULL

#define fdbg_ToComputer_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,ack,message.ack),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,reset,message.reset),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,write_memory,message.write_memory),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,read_memory,message.read_memory),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,cycle,message.cycle),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,step,message.step),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,breakpoint,message.breakpoint),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,run,message.run),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,next,message.next),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,get_run_status,message.get_run_status),  10) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,pause,message.pause),  11)
#define fdbg_ToComputer_CALLBACK NULL
#define fdbg_ToComputer_DEFAULT NULL
#define fdbg_ToComputer_message_ack_MSGTYPE fdbg_Ack
#define fdbg_ToComputer_message_reset_MSGTYPE fdbg_Reset
#define fdbg_ToComputer_message_write_memory_MSGTYPE fdbg_WriteMemory
#define fdbg_ToComputer_message_read_memory_MSGTYPE fdbg_ReadMemory
#define fdbg_ToComputer_message_cycle_MSGTYPE fdbg_Cycle
#define fdbg_ToComputer_message_step_MSGTYPE fdbg_Step
#define fdbg_ToComputer_message_breakpoint_MSGTYPE fdbg_Breakpoint
#define fdbg_ToComputer_message_run_MSGTYPE fdbg_Run
#define fdbg_ToComputer_message_next_MSGTYPE fdbg_Next
#define fdbg_ToComputer_message_get_run_status_MSGTYPE fdbg_GetRunStatus
#define fdbg_ToComputer_message_pause_MSGTYPE fdbg_Pause

extern const pb_msgdesc_t fdbg_Ack_msg;
extern const pb_msgdesc_t fdbg_WriteMemory_msg;
extern const pb_msgdesc_t fdbg_ReadMemory_msg;
extern const pb_msgdesc_t fdbg_Reset_msg;
extern const pb_msgdesc_t fdbg_Step_msg;
extern const pb_msgdesc_t fdbg_Cycle_msg;
extern const pb_msgdesc_t fdbg_Breakpoint_msg;
extern const pb_msgdesc_t fdbg_UserEvent_msg;
extern const pb_msgdesc_t fdbg_UserEvent_TerminalKeypress_msg;
extern const pb_msgdesc_t fdbg_Run_msg;
extern const pb_msgdesc_t fdbg_Next_msg;
extern const pb_msgdesc_t fdbg_GetRunStatus_msg;
extern const pb_msgdesc_t fdbg_Pause_msg;
extern const pb_msgdesc_t fdbg_ToComputer_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define fdbg_Ack_fields &fdbg_Ack_msg
#define fdbg_WriteMemory_fields &fdbg_WriteMemory_msg
#define fdbg_ReadMemory_fields &fdbg_ReadMemory_msg
#define fdbg_Reset_fields &fdbg_Reset_msg
#define fdbg_Step_fields &fdbg_Step_msg
#define fdbg_Cycle_fields &fdbg_Cycle_msg
#define fdbg_Breakpoint_fields &fdbg_Breakpoint_msg
#define fdbg_UserEvent_fields &fdbg_UserEvent_msg
#define fdbg_UserEvent_TerminalKeypress_fields &fdbg_UserEvent_TerminalKeypress_msg
#define fdbg_Run_fields &fdbg_Run_msg
#define fdbg_Next_fields &fdbg_Next_msg
#define fdbg_GetRunStatus_fields &fdbg_GetRunStatus_msg
#define fdbg_Pause_fields &fdbg_Pause_msg
#define fdbg_ToComputer_fields &fdbg_ToComputer_msg

/* Maximum encoded size of messages (where known) */
#define FDBG_PROTOBUF_TO_COMPUTER_NANOPB_H_MAX_SIZE fdbg_ToComputer_size
#define fdbg_Ack_size                            0
#define fdbg_Breakpoint_size                     13
#define fdbg_Cycle_size                          0
#define fdbg_GetRunStatus_size                   52
#define fdbg_Next_size                           0
#define fdbg_Pause_size                          0
#define fdbg_ReadMemory_size                     29
#define fdbg_Reset_size                          0
#define fdbg_Run_size                            2
#define fdbg_Step_size                           54
#define fdbg_ToComputer_size                     87
#define fdbg_UserEvent_TerminalKeypress_size     9
#define fdbg_UserEvent_size                      11
#define fdbg_WriteMemory_size                    85

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
